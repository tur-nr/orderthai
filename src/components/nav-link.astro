---
interface Props {
  href: string;
  current?: boolean | "page";
  menu?: boolean;
}

const { href, menu, current } = Astro.props;
---

<a href={href} aria-current={current} role={menu ? "button" : "link"}>
  <slot />
</a>

<style lang="scss">
  @use "sass:color";
  @import "../scss/variables";

  $navbar-link-color: $color-blue;

  a {
    --navbar-link-bg-color: ;
    --navbar-link-bg-color-hover: #{color.scale(
        $navbar-link-color,
        $lightness: 95%
      )};
    --navbar-link-bg-color-active: #{color.scale(
        $navbar-link-color,
        $lightness: 90%
      )};
    --navbar-link-text-color: var(--text-color-secondary);
    --navbar-link-text-color-selected: #{color.scale(
        $navbar-link-color,
        $lightness: -30%
      )};
    --navbar-link-text-color-hover: #{color.scale(
        $navbar-link-color,
        $lightness: -10%
      )};
    --navbar-link-text-color-active: #{color.scale(
        $navbar-link-color,
        $lightness: -30%
      )};

    background-color: var(--navbar-link-bg-color);
    color: var(--navbar-link-text-color);

    display: inline-flex;
    margin-right: 1rem;
    padding: 0.75rem;
    border-radius: 1.5rem;
    text-decoration: none;
    font-weight: 500;

    &:hover {
      --navbar-link-text-color: var(--navbar-link-text-color-hover);
      --navbar-link-bg-color: var(--navbar-link-bg-color-hover);
    }

    &:active,
    &[aria-current]:active {
      --navbar-link-text-color: var(--navbar-link-text-color-active);
      --navbar-link-bg-color: var(--navbar-link-bg-color-active);
    }

    &[aria-current] {
      --navbar-link-text-color: var(--navbar-link-text-color-selected);
      --navbar-link-bg-color: var(--navbar-link-bg-color-hover);

      padding: 0.75rem 1rem;

      :global(span) {
        display: unset;
        margin: 0 0.125rem 0 0.5rem;
      }
    }

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
      margin-left: auto;
    }

    :global(span) {
      display: none;
    }

    /** hide second svg */
    :global(svg) + :global(svg) {
      display: none;
    }
  }

  @media (min-width: 576px) {
    a {
      display: flex;
      flex-direction: column;
      align-items: center;
      flex: 0 0 7em;

      &,
      &[aria-current] {
        padding: 0.75rem 1rem;
      }

      :global(svg) {
        margin-bottom: 0.25rem;
      }

      /** show second svg */
      :global(svg) + :global(svg) {
        display: unset;
      }

      /** hide first svg */
      &:last-child > :global(svg):first-child {
        display: none;
      }

      :global(span) {
        display: unset;
      }

      &[aria-current] :global(span) {
        margin: unset;
      }
    }
  }

  @media (prefers-color-scheme: dark) {
    a {
      --navbar-link-bg-color: ;
      --navbar-link-bg-color-hover: #{$color-gray-975};
      --navbar-link-bg-color-active: #{$color-gray-975};
      --navbar-link-text-color: var(--text-color-tertiary);
      --navbar-link-text-color-selected: #{color.scale(
          $navbar-link-color,
          $lightness: 30%
        )};
      --navbar-link-text-color-hover: #{$color-gray-500};
      --navbar-link-text-color-active: #{color.scale(
          $navbar-link-color,
          $lightness: 30%
        )};
    }
  }
</style>
